import createLanguageAsyncLoader from "./create-language-async-loader"
export default {
  abap: createLanguageAsyncLoader("abap", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_abap" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/abap.js")),
  abnf: createLanguageAsyncLoader("abnf", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_abnf" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/abnf.js")),
  actionscript: createLanguageAsyncLoader("actionscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_actionscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/actionscript.js")),
  ada: createLanguageAsyncLoader("ada", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ada" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ada.js")),
  agda: createLanguageAsyncLoader("agda", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_agda" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/agda.js")),
  al: createLanguageAsyncLoader("al", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_al" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/al.js")),
  antlr4: createLanguageAsyncLoader("antlr4", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_antlr4" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/antlr4.js")),
  apacheconf: createLanguageAsyncLoader("apacheconf", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_apacheconf" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/apacheconf.js")),
  apex: createLanguageAsyncLoader("apex", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_apex" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/apex.js")),
  apl: createLanguageAsyncLoader("apl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_apl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/apl.js")),
  applescript: createLanguageAsyncLoader("applescript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_applescript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/applescript.js")),
  aql: createLanguageAsyncLoader("aql", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_aql" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/aql.js")),
  arduino: createLanguageAsyncLoader("arduino", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_arduino" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/arduino.js")),
  arff: createLanguageAsyncLoader("arff", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_arff" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/arff.js")),
  asciidoc: createLanguageAsyncLoader("asciidoc", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_asciidoc" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/asciidoc.js")),
  asm6502: createLanguageAsyncLoader("asm6502", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_asm6502" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/asm6502.js")),
  asmatmel: createLanguageAsyncLoader("asmatmel", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_asmatmel" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/asmatmel.js")),
  aspnet: createLanguageAsyncLoader("aspnet", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_aspnet" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/aspnet.js")),
  autohotkey: createLanguageAsyncLoader("autohotkey", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_autohotkey" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/autohotkey.js")),
  autoit: createLanguageAsyncLoader("autoit", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_autoit" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/autoit.js")),
  avisynth: createLanguageAsyncLoader("avisynth", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_avisynth" */process.env.REACT_APP_PUBLIC_URL +  "refractor/lang/avisynth.js")),
  avroIdl: createLanguageAsyncLoader("avroIdl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_avroIdl" */process.env.REACT_APP_PUBLIC_URL +  "refractor/lang/avro-idl.js")),
  bash: createLanguageAsyncLoader("bash", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_bash" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/bash.js")),
  basic: createLanguageAsyncLoader("basic", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_basic" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/basic.js")),
  batch: createLanguageAsyncLoader("batch", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_batch" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/batch.js")),
  bbcode: createLanguageAsyncLoader("bbcode", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_bbcode" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/bbcode.js")),
  bicep: createLanguageAsyncLoader("bicep", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_bicep" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/bicep.js")),
  birb: createLanguageAsyncLoader("birb", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_birb" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/birb.js")),
  bison: createLanguageAsyncLoader("bison", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_bison" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/bison.js")),
  bnf: createLanguageAsyncLoader("bnf", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_bnf" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/bnf.js")),
  brainfuck: createLanguageAsyncLoader("brainfuck", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_brainfuck" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/brainfuck.js")),
  brightscript: createLanguageAsyncLoader("brightscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_brightscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/brightscript.js")),
  bro: createLanguageAsyncLoader("bro", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_bro" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/bro.js")),
  bsl: createLanguageAsyncLoader("bsl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_bsl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/bsl.js")),
  c: createLanguageAsyncLoader("c", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_c" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/c.js")),
  cfscript: createLanguageAsyncLoader("cfscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_cfscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/cfscript.js")),
  chaiscript: createLanguageAsyncLoader("chaiscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_chaiscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/chaiscript.js")),
  cil: createLanguageAsyncLoader("cil", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_cil" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/cil.js")),
  clike: createLanguageAsyncLoader("clike", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_clike" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/clike.js")),
  clojure: createLanguageAsyncLoader("clojure", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_clojure" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/clojure.js")),
  cmake: createLanguageAsyncLoader("cmake", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_cmake" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/cmake.js")),
  cobol: createLanguageAsyncLoader("cobol", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_cobol" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/cobol.js")),
  coffeescript: createLanguageAsyncLoader("coffeescript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_coffeescript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/coffeescript.js")),
  concurnas: createLanguageAsyncLoader("concurnas", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_concurnas" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/concurnas.js")),
  coq: createLanguageAsyncLoader("coq", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_coq" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/coq.js")),
  cpp: createLanguageAsyncLoader("cpp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_cpp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/cpp.js")),
  crystal: createLanguageAsyncLoader("crystal", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_crystal" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/crystal.js")),
  csharp: createLanguageAsyncLoader("csharp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_csharp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/csharp.js")),
  cshtml: createLanguageAsyncLoader("cshtml", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_cshtml" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/cshtml.js")),
  csp: createLanguageAsyncLoader("csp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_csp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/csp.js")),
  cssExtras: createLanguageAsyncLoader("cssExtras", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_cssExtras" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/css-extras.js")),
  css: createLanguageAsyncLoader("css", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_css" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/css.js")),
  csv: createLanguageAsyncLoader("csv", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_csv" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/csv.js")),
  cypher: createLanguageAsyncLoader("cypher", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_cypher" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/cypher.js")),
  d: createLanguageAsyncLoader("d", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_d" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/d.js")),
  dart: createLanguageAsyncLoader("dart", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_dart" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/dart.js")),
  dataweave: createLanguageAsyncLoader("dataweave", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_dataweave" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/dataweave.js")),
  dax: createLanguageAsyncLoader("dax", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_dax" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/dax.js")),
  dhall: createLanguageAsyncLoader("dhall", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_dhall" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/dhall.js")),
  diff: createLanguageAsyncLoader("diff", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_diff" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/diff.js")),
  django: createLanguageAsyncLoader("django", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_django" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/django.js")),
  dnsZoneFile: createLanguageAsyncLoader("dnsZoneFile", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_dnsZoneFile" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/dns-zone-file.js")),
  docker: createLanguageAsyncLoader("docker", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_docker" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/docker.js")),
  dot: createLanguageAsyncLoader("dot", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_dot" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/dot.js")),
  ebnf: createLanguageAsyncLoader("ebnf", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ebnf" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ebnf.js")),
  editorconfig: createLanguageAsyncLoader("editorconfig", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_editorconfig" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/editorconfig.js")),
  eiffel: createLanguageAsyncLoader("eiffel", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_eiffel" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/eiffel.js")),
  ejs: createLanguageAsyncLoader("ejs", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ejs" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ejs.js")),
  elixir: createLanguageAsyncLoader("elixir", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_elixir" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/elixir.js")),
  elm: createLanguageAsyncLoader("elm", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_elm" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/elm.js")),
  erb: createLanguageAsyncLoader("erb", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_erb" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/erb.js")),
  erlang: createLanguageAsyncLoader("erlang", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_erlang" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/erlang.js")),
  etlua: createLanguageAsyncLoader("etlua", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_etlua" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/etlua.js")),
  excelFormula: createLanguageAsyncLoader("excelFormula", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_excelFormula" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/excel-formula.js")),
  factor: createLanguageAsyncLoader("factor", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_factor" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/factor.js")),
  falselang: createLanguageAsyncLoader("falselang", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_falselang" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/false.js")),
  firestoreSecurityRules: createLanguageAsyncLoader("firestoreSecurityRules", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_firestoreSecurityRules" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/firestore-security-rules.js")),
  flow: createLanguageAsyncLoader("flow", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_flow" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/flow.js")),
  fortran: createLanguageAsyncLoader("fortran", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_fortran" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/fortran.js")),
  fsharp: createLanguageAsyncLoader("fsharp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_fsharp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/fsharp.js")),
  ftl: createLanguageAsyncLoader("ftl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ftl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ftl.js")),
  gap: createLanguageAsyncLoader("gap", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_gap" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/gap.js")),
  gcode: createLanguageAsyncLoader("gcode", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_gcode" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/gcode.js")),
  gdscript: createLanguageAsyncLoader("gdscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_gdscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/gdscript.js")),
  gedcom: createLanguageAsyncLoader("gedcom", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_gedcom" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/gedcom.js")),
  gherkin: createLanguageAsyncLoader("gherkin", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_gherkin" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/gherkin.js")),
  git: createLanguageAsyncLoader("git", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_git" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/git.js")),
  glsl: createLanguageAsyncLoader("glsl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_glsl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/glsl.js")),
  gml: createLanguageAsyncLoader("gml", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_gml" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/gml.js")),
  gn: createLanguageAsyncLoader("gn", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_gn" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/gn.js")),
  goModule: createLanguageAsyncLoader("goModule", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_goModule" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/go-module.js")),
  go: createLanguageAsyncLoader("go", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_go" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/go.js")),
  graphql: createLanguageAsyncLoader("graphql", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_graphql" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/graphql.js")),
  groovy: createLanguageAsyncLoader("groovy", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_groovy" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/groovy.js")),
  haml: createLanguageAsyncLoader("haml", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_haml" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/haml.js")),
  handlebars: createLanguageAsyncLoader("handlebars", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_handlebars" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/handlebars.js")),
  haskell: createLanguageAsyncLoader("haskell", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_haskell" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/haskell.js")),
  haxe: createLanguageAsyncLoader("haxe", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_haxe" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/haxe.js")),
  hcl: createLanguageAsyncLoader("hcl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_hcl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/hcl.js")),
  hlsl: createLanguageAsyncLoader("hlsl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_hlsl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/hlsl.js")),
  hoon: createLanguageAsyncLoader("hoon", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_hoon" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/hoon.js")),
  hpkp: createLanguageAsyncLoader("hpkp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_hpkp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/hpkp.js")),
  hsts: createLanguageAsyncLoader("hsts", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_hsts" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/hsts.js")),
  http: createLanguageAsyncLoader("http", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_http" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/http.js")),
  ichigojam: createLanguageAsyncLoader("ichigojam", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ichigojam" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ichigojam.js")),
  icon: createLanguageAsyncLoader("icon", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_icon" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/icon.js")),
  icuMessageFormat: createLanguageAsyncLoader("icuMessageFormat", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_icuMessageFormat" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/icu-message-format.js")),
  idris: createLanguageAsyncLoader("idris", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_idris" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/idris.js")),
  iecst: createLanguageAsyncLoader("iecst", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_iecst" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/iecst.js")),
  ignore: createLanguageAsyncLoader("ignore", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ignore" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ignore.js")),
  inform7: createLanguageAsyncLoader("inform7", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_inform7" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/inform7.js")),
  ini: createLanguageAsyncLoader("ini", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ini" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ini.js")),
  io: createLanguageAsyncLoader("io", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_io" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/io.js")),
  j: createLanguageAsyncLoader("j", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_j" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/j.js")),
  java: createLanguageAsyncLoader("java", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_java" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/java.js")),
  javadoc: createLanguageAsyncLoader("javadoc", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_javadoc" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/javadoc.js")),
  javadoclike: createLanguageAsyncLoader("javadoclike", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_javadoclike" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/javadoclike.js")),
  javascript: createLanguageAsyncLoader("javascript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_javascript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/javascript.js")),
  javastacktrace: createLanguageAsyncLoader("javastacktrace", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_javastacktrace" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/javastacktrace.js")),
  jexl: createLanguageAsyncLoader("jexl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jexl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/jexl.js")),
  jolie: createLanguageAsyncLoader("jolie", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jolie" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/jolie.js")),
  jq: createLanguageAsyncLoader("jq", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jq" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/jq.js")),
  jsExtras: createLanguageAsyncLoader("jsExtras", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jsExtras" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/js-extras.js")),
  jsTemplates: createLanguageAsyncLoader("jsTemplates", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jsTemplates" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/js-templates.js")),
  jsdoc: createLanguageAsyncLoader("jsdoc", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jsdoc" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/jsdoc.js")),
  json: createLanguageAsyncLoader("json", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_json" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/json.js")),
  json5: createLanguageAsyncLoader("json5", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_json5" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/json5.js")),
  jsonp: createLanguageAsyncLoader("jsonp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jsonp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/jsonp.js")),
  jsstacktrace: createLanguageAsyncLoader("jsstacktrace", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jsstacktrace" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/jsstacktrace.js")),
  jsx: createLanguageAsyncLoader("jsx", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_jsx" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/jsx.js")),
  julia: createLanguageAsyncLoader("julia", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_julia" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/julia.js")),
  keepalived: createLanguageAsyncLoader("keepalived", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_keepalived" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/keepalived.js")),
  keyman: createLanguageAsyncLoader("keyman", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_keyman" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/keyman.js")),
  kotlin: createLanguageAsyncLoader("kotlin", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_kotlin" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/kotlin.js")),
  kumir: createLanguageAsyncLoader("kumir", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_kumir" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/kumir.js")),
  kusto: createLanguageAsyncLoader("kusto", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_kusto" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/kusto.js")),
  latex: createLanguageAsyncLoader("latex", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_latex" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/latex.js")),
  latte: createLanguageAsyncLoader("latte", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_latte" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/latte.js")),
  less: createLanguageAsyncLoader("less", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_less" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/less.js")),
  lilypond: createLanguageAsyncLoader("lilypond", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_lilypond" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/lilypond.js")),
  liquid: createLanguageAsyncLoader("liquid", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_liquid" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/liquid.js")),
  lisp: createLanguageAsyncLoader("lisp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_lisp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/lisp.js")),
  livescript: createLanguageAsyncLoader("livescript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_livescript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/livescript.js")),
  llvm: createLanguageAsyncLoader("llvm", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_llvm" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/llvm.js")),
  log: createLanguageAsyncLoader("log", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_log" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/log.js")),
  lolcode: createLanguageAsyncLoader("lolcode", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_lolcode" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/lolcode.js")),
  lua: createLanguageAsyncLoader("lua", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_lua" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/lua.js")),
  magma: createLanguageAsyncLoader("magma", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_magma" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/magma.js")),
  makefile: createLanguageAsyncLoader("makefile", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_makefile" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/makefile.js")),
  markdown: createLanguageAsyncLoader("markdown", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_markdown" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/markdown.js")),
  markupTemplating: createLanguageAsyncLoader("markupTemplating", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_markupTemplating" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/markup-templating.js")),
  markup: createLanguageAsyncLoader("markup", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_markup" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/markup.js")),
  matlab: createLanguageAsyncLoader("matlab", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_matlab" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/matlab.js")),
  maxscript: createLanguageAsyncLoader("maxscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_maxscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/maxscript.js")),
  mel: createLanguageAsyncLoader("mel", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_mel" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/mel.js")),
  mermaid: createLanguageAsyncLoader("mermaid", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_mermaid" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/mermaid.js")),
  mizar: createLanguageAsyncLoader("mizar", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_mizar" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/mizar.js")),
  mongodb: createLanguageAsyncLoader("mongodb", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_mongodb" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/mongodb.js")),
  monkey: createLanguageAsyncLoader("monkey", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_monkey" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/monkey.js")),
  moonscript: createLanguageAsyncLoader("moonscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_moonscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/moonscript.js")),
  n1ql: createLanguageAsyncLoader("n1ql", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_n1ql" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/n1ql.js")),
  n4js: createLanguageAsyncLoader("n4js", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_n4js" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/n4js.js")),
  nand2tetrisHdl: createLanguageAsyncLoader("nand2tetrisHdl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_nand2tetrisHdl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/nand2tetris-hdl.js")),
  naniscript: createLanguageAsyncLoader("naniscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_naniscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/naniscript.js")),
  nasm: createLanguageAsyncLoader("nasm", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_nasm" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/nasm.js")),
  neon: createLanguageAsyncLoader("neon", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_neon" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/neon.js")),
  nevod: createLanguageAsyncLoader("nevod", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_nevod" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/nevod.js")),
  nginx: createLanguageAsyncLoader("nginx", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_nginx" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/nginx.js")),
  nim: createLanguageAsyncLoader("nim", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_nim" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/nim.js")),
  nix: createLanguageAsyncLoader("nix", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_nix" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/nix.js")),
  nsis: createLanguageAsyncLoader("nsis", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_nsis" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/nsis.js")),
  objectivec: createLanguageAsyncLoader("objectivec", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_objectivec" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/objectivec.js")),
  ocaml: createLanguageAsyncLoader("ocaml", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ocaml" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ocaml.js")),
  opencl: createLanguageAsyncLoader("opencl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_opencl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/opencl.js")),
  openqasm: createLanguageAsyncLoader("openqasm", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_openqasm" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/openqasm.js")),
  oz: createLanguageAsyncLoader("oz", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_oz" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/oz.js")),
  parigp: createLanguageAsyncLoader("parigp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_parigp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/parigp.js")),
  parser: createLanguageAsyncLoader("parser", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_parser" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/parser.js")),
  pascal: createLanguageAsyncLoader("pascal", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_pascal" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/pascal.js")),
  pascaligo: createLanguageAsyncLoader("pascaligo", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_pascaligo" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/pascaligo.js")),
  pcaxis: createLanguageAsyncLoader("pcaxis", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_pcaxis" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/pcaxis.js")),
  peoplecode: createLanguageAsyncLoader("peoplecode", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_peoplecode" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/peoplecode.js")),
  perl: createLanguageAsyncLoader("perl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_perl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/perl.js")),
  phpExtras: createLanguageAsyncLoader("phpExtras", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_phpExtras" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/php-extras.js")),
  php: createLanguageAsyncLoader("php", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_php" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/php.js")),
  phpdoc: createLanguageAsyncLoader("phpdoc", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_phpdoc" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/phpdoc.js")),
  plsql: createLanguageAsyncLoader("plsql", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_plsql" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/plsql.js")),
  powerquery: createLanguageAsyncLoader("powerquery", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_powerquery" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/powerquery.js")),
  powershell: createLanguageAsyncLoader("powershell", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_powershell" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/powershell.js")),
  processing: createLanguageAsyncLoader("processing", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_processing" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/processing.js")),
  prolog: createLanguageAsyncLoader("prolog", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_prolog" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/prolog.js")),
  promql: createLanguageAsyncLoader("promql", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_promql" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/promql.js")),
  properties: createLanguageAsyncLoader("properties", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_properties" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/properties.js")),
  protobuf: createLanguageAsyncLoader("protobuf", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_protobuf" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/protobuf.js")),
  psl: createLanguageAsyncLoader("psl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_psl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/psl.js")),
  pug: createLanguageAsyncLoader("pug", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_pug" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/pug.js")),
  puppet: createLanguageAsyncLoader("puppet", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_puppet" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/puppet.js")),
  pure: createLanguageAsyncLoader("pure", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_pure" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/pure.js")),
  purebasic: createLanguageAsyncLoader("purebasic", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_purebasic" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/purebasic.js")),
  purescript: createLanguageAsyncLoader("purescript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_purescript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/purescript.js")),
  python: createLanguageAsyncLoader("python", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_python" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/python.js")),
  q: createLanguageAsyncLoader("q", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_q" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/q.js")),
  qml: createLanguageAsyncLoader("qml", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_qml" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/qml.js")),
  qore: createLanguageAsyncLoader("qore", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_qore" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/qore.js")),
  qsharp: createLanguageAsyncLoader("qsharp", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_qsharp" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/qsharp.js")),
  r: createLanguageAsyncLoader("r", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_r" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/r.js")),
  racket: createLanguageAsyncLoader("racket", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_racket" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/racket.js")),
  reason: createLanguageAsyncLoader("reason", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_reason" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/reason.js")),
  regex: createLanguageAsyncLoader("regex", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_regex" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/regex.js")),
  rego: createLanguageAsyncLoader("rego", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_rego" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/rego.js")),
  renpy: createLanguageAsyncLoader("renpy", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_renpy" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/renpy.js")),
  rest: createLanguageAsyncLoader("rest", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_rest" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/rest.js")),
  rip: createLanguageAsyncLoader("rip", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_rip" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/rip.js")),
  roboconf: createLanguageAsyncLoader("roboconf", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_roboconf" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/roboconf.js")),
  robotframework: createLanguageAsyncLoader("robotframework", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_robotframework" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/robotframework.js")),
  ruby: createLanguageAsyncLoader("ruby", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_ruby" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/ruby.js")),
  rust: createLanguageAsyncLoader("rust", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_rust" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/rust.js")),
  sas: createLanguageAsyncLoader("sas", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_sas" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/sas.js")),
  sass: createLanguageAsyncLoader("sass", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_sass" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/sass.js")),
  scala: createLanguageAsyncLoader("scala", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_scala" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/scala.js")),
  scheme: createLanguageAsyncLoader("scheme", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_scheme" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/scheme.js")),
  scss: createLanguageAsyncLoader("scss", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_scss" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/scss.js")),
  shellSession: createLanguageAsyncLoader("shellSession", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_shellSession" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/shell-session.js")),
  smali: createLanguageAsyncLoader("smali", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_smali" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/smali.js")),
  smalltalk: createLanguageAsyncLoader("smalltalk", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_smalltalk" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/smalltalk.js")),
  smarty: createLanguageAsyncLoader("smarty", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_smarty" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/smarty.js")),
  sml: createLanguageAsyncLoader("sml", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_sml" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/sml.js")),
  solidity: createLanguageAsyncLoader("solidity", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_solidity" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/solidity.js")),
  solutionFile: createLanguageAsyncLoader("solutionFile", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_solutionFile" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/solution-file.js")),
  soy: createLanguageAsyncLoader("soy", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_soy" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/soy.js")),
  sparql: createLanguageAsyncLoader("sparql", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_sparql" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/sparql.js")),
  splunkSpl: createLanguageAsyncLoader("splunkSpl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_splunkSpl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/splunk-spl.js")),
  sqf: createLanguageAsyncLoader("sqf", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_sqf" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/sqf.js")),
  sql: createLanguageAsyncLoader("sql", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_sql" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/sql.js")),
  squirrel: createLanguageAsyncLoader("squirrel", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_squirrel" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/squirrel.js")),
  stan: createLanguageAsyncLoader("stan", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_stan" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/stan.js")),
  stylus: createLanguageAsyncLoader("stylus", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_stylus" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/stylus.js")),
  swift: createLanguageAsyncLoader("swift", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_swift" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/swift.js")),
  systemd: createLanguageAsyncLoader("systemd", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_systemd" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/systemd.js")),
  t4Cs: createLanguageAsyncLoader("t4Cs", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_t4Cs" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/t4-cs.js")),
  t4Templating: createLanguageAsyncLoader("t4Templating", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_t4Templating" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/t4-templating.js")),
  t4Vb: createLanguageAsyncLoader("t4Vb", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_t4Vb" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/t4-vb.js")),
  tap: createLanguageAsyncLoader("tap", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_tap" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/tap.js")),
  tcl: createLanguageAsyncLoader("tcl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_tcl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/tcl.js")),
  textile: createLanguageAsyncLoader("textile", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_textile" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/textile.js")),
  toml: createLanguageAsyncLoader("toml", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_toml" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/toml.js")),
  tremor: createLanguageAsyncLoader("tremor", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_tremor" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/tremor.js")),
  tsx: createLanguageAsyncLoader("tsx", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_tsx" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/tsx.js")),
  tt2: createLanguageAsyncLoader("tt2", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_tt2" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/tt2.js")),
  turtle: createLanguageAsyncLoader("turtle", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_turtle" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/turtle.js")),
  twig: createLanguageAsyncLoader("twig", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_twig" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/twig.js")),
  typescript: createLanguageAsyncLoader("typescript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_typescript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/typescript.js")),
  typoscript: createLanguageAsyncLoader("typoscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_typoscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/typoscript.js")),
  unrealscript: createLanguageAsyncLoader("unrealscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_unrealscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/unrealscript.js")),
  uorazor: createLanguageAsyncLoader("uorazor", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_uorazor" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/uorazor.js")),
  uri: createLanguageAsyncLoader("uri", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_uri" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/uri.js")),
  v: createLanguageAsyncLoader("v", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_v" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/v.js")),
  vala: createLanguageAsyncLoader("vala", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_vala" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/vala.js")),
  vbnet: createLanguageAsyncLoader("vbnet", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_vbnet" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/vbnet.js")),
  velocity: createLanguageAsyncLoader("velocity", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_velocity" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/velocity.js")),
  verilog: createLanguageAsyncLoader("verilog", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_verilog" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/verilog.js")),
  vhdl: createLanguageAsyncLoader("vhdl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_vhdl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/vhdl.js")),
  vim: createLanguageAsyncLoader("vim", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_vim" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/vim.js")),
  visualBasic: createLanguageAsyncLoader("visualBasic", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_visualBasic" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/visual-basic.js")),
  warpscript: createLanguageAsyncLoader("warpscript", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_warpscript" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/warpscript.js")),
  wasm: createLanguageAsyncLoader("wasm", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_wasm" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/wasm.js")),
  webIdl: createLanguageAsyncLoader("webIdl", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_webIdl" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/web-idl.js")),
  wiki: createLanguageAsyncLoader("wiki", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_wiki" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/wiki.js")),
  wolfram: createLanguageAsyncLoader("wolfram", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_wolfram" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/wolfram.js")),
  wren: createLanguageAsyncLoader("wren", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_wren" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/wren.js")),
  xeora: createLanguageAsyncLoader("xeora", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_xeora" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/xeora.js")),
  xmlDoc: createLanguageAsyncLoader("xmlDoc", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_xmlDoc" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/xml-doc.js")),
  xojo: createLanguageAsyncLoader("xojo", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_xojo" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/xojo.js")),
  xquery: createLanguageAsyncLoader("xquery", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_xquery" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/xquery.js")),
  yaml: createLanguageAsyncLoader("yaml", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_yaml" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/yaml.js")),
  yang: createLanguageAsyncLoader("yang", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_yang" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/yang.js")),
  zig: createLanguageAsyncLoader("zig", () => import(/* webpackChunkName: "react-syntax-highlighter_languages_refractor_zig" */ process.env.REACT_APP_PUBLIC_URL + "refractor/lang/zig.js")),
}